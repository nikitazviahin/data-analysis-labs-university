import numpy as np 
import matplotlib.pyplot as plt
import matplotlib

def matrixW(v, z):
    W=[]
    r=range(len(z))
    for i in r:
        W.append([0 for x in r])
    
    for i in r:
        for j in r:
            for example in range(len(v)):
                if i != j:
                    W[i][j] += v[example][i] * v[example][j]
    
    return W

def identify(vin, zin, itnum):
    it=1
    v = vin
    z = zin
    w = np.array(matrixW(v, z))
    wz=np.array([])
    error=[]
    while(it<=itnum):
        wz=w.dot(z)
        print('\nМатрица W\n',wz)
        fwz=[]
        for i in wz: 
            if i>=0: 
                fwz.append(1) 
            else: 
                fwz.append(-1)
        print('\ny*\n\n',fwz)
        error=np.array(fwz)-z
       
        if  fwz==list(z):
            print("Распознано!")
            break
        
        else:
            z=np.array(fwz)
        it+=1
    
    return print("Количество итераций = ",it), plt.imshow(np.array(fwz).reshape(11,7))

x0=np.array([-1, 1, 1, 1, 1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, 1,-1, 1, 1, 1, 1, 1, -1])
x1=np.array([-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1])
x2=np.array([-1, -1, 1, 1, 1, -1, -1,-1, 1, -1, -1, -1, 1, -1,1, -1, -1, -1, -1, -1, 1,1, -1, -1, -1, -1, -1, 1,-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, 1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, 1, -1, -1, -1, -1,-1, 1, -1, -1, -1, -1, -1,1, -1, -1, -1, -1, -1, -1,1, 1, 1, 1, 1, 1, 1])
x3=np.array([-1, -1, 1, 1, 1, -1, -1,-1, 1, -1, -1, -1, 1, -1,-1, -1, -1, -1, -1, -1, 1,-1, -1, -1, -1, -1, -1, 1,-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, 1, -1, -1,-1, -1, -1, -1, 1, -1, -1,-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, -1, -1, 1,-1, 1, -1, -1, -1, 1, -1,-1, -1, 1, 1, 1, -1, -1])
x4=np.array([-1, -1, 1, -1, -1, 1, -1,-1, -1, 1, -1, -1, 1, -1,-1, -1, 1, -1, -1, 1, -1,-1, -1, 1, -1, -1, 1, -1,-1, -1, 1, -1, -1, 1, -1,-1, -1, 1, 1, 1, 1, -1,-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, -1, 1, -1])
x5=np.array([-1, -1, 1, 1, 1, 1, 1,-1, -1, 1, -1, -1, -1, -1,-1, -1, 1, -1, -1, -1, -1,-1, -1, 1, -1, -1, -1, -1,-1, -1, 1, 1, -1, -1, -1,-1, -1, -1, -1, 1, -1, -1,-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, -1, -1, 1,-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, 1, -1, -1,-1, -1, 1, 1, -1, -1, -1])
x6=np.array([-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, 1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, 1, -1, -1, -1, -1,-1, -1, 1, -1, -1, -1, -1,-1, -1, 1, -1, -1, -1, -1,-1, -1, 1, 1, 1, 1, -1,-1, -1, 1, -1, -1, 1, -1,-1, -1, 1, -1, -1, 1, -1,-1, -1, 1, 1, 1, 1, -1,-1, -1, -1, -1, -1, -1, -1])
x7=np.array([-1, -1, -1, -1, -1, -1, -1,-1, 1, 1, 1, 1, 1, -1,-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, 1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, 1, -1, -1, -1, -1,-1, 1, -1, -1, -1, -1, -1,1, -1, -1, -1, -1, -1, -1,-1, -1, -1, -1, -1, -1, -1,-1, -1, -1, -1, -1, -1, -1])
x8=np.array([-1, 1, 1, 1, 1, 1, -1,1, -1, -1, -1, -1, -1, 1,1, -1, -1, -1, -1, -1, 1,1, -1, -1, -1, -1, -1, 1,1, -1, -1, -1, -1, -1, 1,-1, 1, 1, 1, 1, 1, -1,1, -1, -1, -1, -1, -1, 1,1, -1, -1, -1, -1, -1, 1,1, -1, -1, -1, -1, -1, 1,1, -1, -1, -1, -1, -1, 1,-1, 1, 1, 1, 1, 1, -1])
x9=np.array([-1, 1, 1, 1, 1, 1, -1,-1, 1, -1, -1, -1, 1, -1,-1, 1, -1, -1, -1, 1, -1,-1, 1, -1, -1, -1, 1, -1,-1, 1, 1, 1, 1, 1, -1,-1, -1, -1, -1, -1, 1, -1,-1, -1, -1, -1, 1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, 1, -1, -1, -1, -1,-1, 1, -1, -1, -1, -1, -1,-1, -1, -1, -1, -1, -1, -1])


#функціі пам'яті
Y=[x8]+[x1]+[x2]
Y1=[x1]+[x2]+[x3]+[x8]

#об'єкт який необхідно розпізнати
Z =np.array([-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1,-1, -1, -1, 1, -1, -1, -1])

matplotlib.pyplot.ion()
identify(Y1,Z,40)

